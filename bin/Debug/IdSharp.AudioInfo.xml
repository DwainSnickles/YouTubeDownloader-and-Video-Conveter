<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdSharp.AudioInfo</name>
    </assembly>
    <members>
        <member name="T:IdSharp.AudioInfo.AudioFile">
            <summary>
            Class which creates an appropriate IAudioFile object based on the file extension.
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.AudioFile.Create(System.String,System.Boolean)">
            <summary>
            Creates an IAudioFile object from the specified path.
            </summary>
            <param name="path">The full path of the file.</param>
            <param name="throwExceptionIfUnknown">if set to <c>true</c>, throws an exception if unknown file extension; otherwise, returns <c>null</c>.</param>
        </member>
        <member name="M:IdSharp.AudioInfo.AudioFile.GetList(System.String[])">
            <summary>
            Gets a list of IAudioFile objects from an array of file paths.  Unknown file extensions are ignored.
            </summary>
            <param name="fileList">The file list.</param>
        </member>
        <member name="M:IdSharp.AudioInfo.AudioFile.GetList(System.String[],System.Boolean)">
            <summary>
            Gets a list of IAudioFile objects from an array of file paths.  Unknown file extensions are ignored.
            </summary>
            <param name="fileList">The file list.</param>
            <param name="sort">if set to <c>true</c> the array will be sorted before building the list.</param>
        </member>
        <member name="M:IdSharp.AudioInfo.AudioFile.GetList(System.String[],System.Boolean,System.Boolean)">
            <summary>
            Gets a list of IAudioFile objects from an array of file paths.
            </summary>
            <param name="fileList">The file list.</param>
            <param name="sort">if set to <c>true</c> the array will be sorted before building the list.</param>
            <param name="throwExceptionIfUnknown">if set to <c>true</c>, throws an exception if an unknown file extension is encountered; otherwise, unknown file extensions are not added to the list.</param>
        </member>
        <member name="M:IdSharp.AudioInfo.AudioFile.GetExtensions">
            <summary>
            Gets all supported extensions.
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.AudioFile.GetFilter(System.Boolean,System.Boolean)">
            <summary>
            Gets the filter for use with an OpenFileDialog.
            </summary>
            <param name="includeAllFiles">if set to <c>true</c> "All files" will be added to the filter.</param>
            <param name="includeAllFormats">if set to <c>true</c> "All supported formats" will be added to the filter.</param>
        </member>
        <member name="T:IdSharp.AudioInfo.AudioFileType">
            <summary>
            Audio File Type
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.AudioFileType.Flac">
            <summary>
            FLAC (*.flac, *.fla)
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.AudioFileType.MonkeysAudio">
            <summary>
            Monkey's Audio (*.ape)
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.AudioFileType.Mpeg">
            <summary>
            MPEG (*.mp3, *.mp2)
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.AudioFileType.Mpeg4">
            <summary>
            MPEG-4 (*.m4a)
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.AudioFileType.Musepack">
            <summary>
            Musepack (*.mpc, *.mpp, *.mp+)
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.AudioFileType.OggVorbis">
            <summary>
            Ogg-Vorbis (*.ogg)
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.AudioFileType.OptimFrog">
            <summary>
            OptimFROG (*.ofr)
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.AudioFileType.RiffWave">
            <summary>
            RIFF-WAVE (*.wav)
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.AudioFileType.Shorten">
            <summary>
            Shorten (*.shn)
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.AudioFileType.WindowsMedia">
            <summary>
            Windows Media Audio (*.wma)
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.AudioFileType.WavPack">
            <summary>
            WavPack (*.wv)
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.AudioFileType.TrueAudio">
            <summary>
            True Audio (*.tta)
            </summary>
        </member>
        <member name="T:IdSharp.AudioInfo.Flac">
            <summary>
            FLAC
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.Flac.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.Flac"/> class.
            </summary>
            <param name="path">The path of the file.</param>
        </member>
        <member name="P:IdSharp.AudioInfo.Flac.Frequency">
            <summary>
            Gets the frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Flac.TotalSeconds">
            <summary>
            Gets the total seconds.
            </summary>
            <value>The total seconds.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Flac.Bitrate">
            <summary>
            Gets the bitrate.
            </summary>
            <value>The bitrate.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Flac.Channels">
            <summary>
            Gets the number of channels.
            </summary>
            <value>The number of channels.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Flac.FileType">
            <summary>
            Gets the type of the audio file.
            </summary>
            <value>The type of the audio file.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Flac.Samples">
            <summary>
            Gets the number of samples.
            </summary>
            <value>The number of samples.</value>
        </member>
        <member name="T:IdSharp.AudioInfo.IAudioFile">
            <summary>
            IAudioFile interface
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.IAudioFile.Bitrate">
            <summary>
            Gets the bitrate.
            </summary>
            <value>The bitrate.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.IAudioFile.TotalSeconds">
            <summary>
            Gets the total seconds.
            </summary>
            <value>The total seconds.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.IAudioFile.Channels">
            <summary>
            Gets the number of channels.
            </summary>
            <value>The number of channels.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.IAudioFile.Frequency">
            <summary>
            Gets the frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.IAudioFile.FileType">
            <summary>
            Gets the type of the audio file.
            </summary>
            <value>The type of the audio file.</value>
        </member>
        <member name="T:IdSharp.AudioInfo.MonkeysAudio">
            <summary>
            Monkey's Audio
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.MonkeysAudio.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.MonkeysAudio"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="P:IdSharp.AudioInfo.MonkeysAudio.Frequency">
            <summary>
            Gets the frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.MonkeysAudio.Frames">
            <summary>
            Gets the frame count.
            </summary>
            <value>The frame count.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.MonkeysAudio.TotalSeconds">
            <summary>
            Gets the total seconds.
            </summary>
            <value>The total seconds.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.MonkeysAudio.Bitrate">
            <summary>
            Gets the bitrate.
            </summary>
            <value>The bitrate.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.MonkeysAudio.Channels">
            <summary>
            Gets the number of channels.
            </summary>
            <value>The number of channels.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.MonkeysAudio.FileType">
            <summary>
            Gets the type of the audio file.
            </summary>
            <value>The type of the audio file.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.MonkeysAudio.CompressionLevel">
            <summary>
            Gets the compression level.
            </summary>
            <value>The compression level.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.MonkeysAudio.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="T:IdSharp.AudioInfo.Mpeg4">
            <summary>
            MPEG-4
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.Mpeg4.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.Mpeg4"/> class.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="M:IdSharp.AudioInfo.Mpeg4.#ctor(IdSharp.AudioInfo.Mpeg4Tag)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.Mpeg4"/> class.
            </summary>
            <param name="mpeg4Tag">The MPEG-4 tag object.  This constructor is more efficient if an Mpeg4Tag object is 
            available.  Changes made to the Mpeg4Tag object will not affect the properties in this object.</param>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg4.Frequency">
            <summary>
            Gets the frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg4.TotalSeconds">
            <summary>
            Gets the total seconds.
            </summary>
            <value>The total seconds.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg4.Bitrate">
            <summary>
            Gets the bitrate.
            </summary>
            <value>The bitrate.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg4.Channels">
            <summary>
            Gets the number of channels.
            </summary>
            <value>The number of channels.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg4.FileType">
            <summary>
            Gets the type of the audio file.
            </summary>
            <value>The type of the audio file.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg4.Samples">
            <summary>
            Gets the number of samples.
            </summary>
            <value>The number of samples.</value>
        </member>
        <member name="T:IdSharp.AudioInfo.Inspection.BasicLameTagReader">
            <summary>
            Basic LAME tag reader
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.BasicLameTagReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.Inspection.BasicLameTagReader"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.BasicLameTagReader.VersionString">
            <summary>
            Returns the version string from the LAME tag
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.BasicLameTagReader.VersionStringNonLameTag">
            <summary>
            Returns the version string from the old LAME header (pre-3.90)
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.BasicLameTagReader.EncodingMethod">
            <summary>
            Returns Encoding Method Byte
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.BasicLameTagReader.Preset">
            <summary>
            Returns Preset WORD
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.BasicLameTagReader.PresetGuess">
            <summary>
            Returns guessed preset enum
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.BasicLameTagReader.Bitrate">
            <summary>
            Returns bitrate from the LAME tag (not the actual bitrate for VBR files)
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.BasicLameTagReader.IsPresetGuessNonBitrate">
            <summary>
            Returns true if the preset is guessed to be a command-line modified version of a preset.
            Only applies to LAME encoded MP3's that do not have preset info stored in the LAME tag.
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.BasicLameTagReader.IsLameTagFound">
            <summary>
            Returns true if a LAME tag is present
            </summary>
        </member>
        <member name="T:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader">
            <summary>
            DescriptiveLameTagReader
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.IsLameTagFound">
            <summary>
            Returns true if a LAME tag is present
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.VersionString">
            <summary>
            Returns the version string from the LAME tag
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.VersionStringNonLameTag">
            <summary>
            Returns the version string from the old LAME header (pre-3.90)
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.UsePresetGuess">
            <summary>
            Returns the preset guessing method used
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.IsPresetGuessNonBitrate">
            <summary>
            Returns true if the preset is guessed to be a command-line modified version of a preset.
            
            If this value is true, the LameTagInfoPreset property will have the string "(modified)" appended, 
            otherwise it wil have "(guessed)" appended.
            
            Only applies to LAME encoded MP3's that do not have preset info stored in the LAME tag.
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.Preset">
            <summary>
            Returns the actual encoder preset (not guessed)
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.PresetGuess">
            <summary>
            Returns the guessed encoder preset
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.LameTagInfoVersion">
            <summary>
            Returns MPEG version and Layer
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.LameTagInfoEncoder">
            <summary>
            Returns encoder
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.LameTagInfoPreset">
            <summary>
            Returns preset information
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.DeterminePresetRelatedValues">
            <summary>
            Determine Preset or PresetGuess values
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.DescriptiveLameTagReader.DeterminePreset(IdSharp.AudioInfo.Inspection.UsePresetGuess@)">
            <summary>
            Determine Preset
            </summary>
            <param name="usePresetGuess">Method sets this variable to the UsePresetGuess used</param>
            <returns>Preset string</returns>
        </member>
        <member name="T:IdSharp.AudioInfo.Inspection.UsePresetGuess">
            <summary>
            Preset guess status
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.UsePresetGuess.NotNeeded">
            <summary>
            Not needed
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.UsePresetGuess.UseGuess">
            <summary>
            Use guess
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.UsePresetGuess.UnableToGuess">
            <summary>
            Unabled to guess
            </summary>
        </member>
        <member name="T:IdSharp.AudioInfo.Inspection.LamePreset">
            <summary>
            Lame Preset
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.Insane">
            <summary>
            --[alt-]preset insane
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.Extreme">
            <summary>
            --[alt-]preset extreme
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.FastExtreme">
            <summary>
            --[alt-]preset fast extreme
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.Standard">
            <summary>
            --[alt-]preset standard
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.FastStandard">
            <summary>
            --[alt-]preset fast standard
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.Medium">
            <summary>
            --preset medium
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.FastMedium">
            <summary>
            --preset medium
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.R3mix">
            <summary>
            --r3mix
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.Studio">
            <summary>
            --preset studio
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.CD">
            <summary>
            --preset cd 
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.Hifi">
            <summary>
            --preset hifi
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.Tape">
            <summary>
            --preset tape
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.Radio">
            <summary>
            --preset radio
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.FM">
            <summary>
            --preset fm 
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.TapeRadioFM">
            <summary>
            --preset tape OR --preset radio OR --preset fm
            the above three presets generate identical files for
            versions of lame from 3.90.3 and 3.93 up
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.Voice">
            <summary>
            --preset voice
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.MWUS">
            <summary>
            --preset mw-us
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.MWEU">
            <summary>
            --preset phon+ OR --preset lw OR --preset mw-eu OR --preset sw
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.Phone">
            <summary>
            --preset phone
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.Inspection.LamePreset.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.ResetData">
            <summary>
            Reset all variables
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.FindFrame(System.Byte[],IdSharp.AudioInfo.Inspection.VBRData@)">
            <summary>
            Find a valid MP3 frame in a byte array.  Sets "m_Frame.Found = true"
            </summary>
            <param name="data">Byte array of data from MP3 file</param>
            <param name="vbrHeader">Method sets this variable to a VBRData struct, if frame found</param>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.IsFrameHeader(System.Byte[])">
            <summary>
            Returns true if valid frame header sent
            </summary>
            <param name="headerData">Header data to test</param>
            <returns>True if valid frame header sent</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.DecodeHeader(System.Byte[])">
            <summary>
            Populates the "m_Frame" struct with data from the header
            </summary>
            <param name="headerData">Header data byte array</param>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.ValidFrameAt(System.Int32,System.Byte[])">
            <summary>
            Returns true if valid frame found at Index
            </summary>
            <param name="index">Index</param>
            <param name="data">Data byte array</param>
            <returns>True if valid frame found at Index</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.GetFrameLength(IdSharp.AudioInfo.Inspection.FrameData)">
            <summary>
            Returns the length of a frame in bytes
            </summary>
            <param name="frame">Frame</param>
            <returns>Length of frame in bytes</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.IsXing(System.Int32,System.Byte[])">
            <summary>
            Returns true if Xing encoder
            </summary>
            <param name="index">Index</param>
            <param name="data">Byte array</param>
            <returns>True of Xing encoder</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.FindVBR(System.Int32,System.Byte[])">
            <summary>
            Returns a VBRData structure from an index in a byte array
            </summary>
            <param name="index">Index</param>
            <param name="data">Byte array</param>
            <returns>VBRData structure</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.GetVBRFrameOffset(IdSharp.AudioInfo.Inspection.FrameData)">
            <summary>
            Returns the offset of the VBRData structure from the start of a frame
            </summary>
            <param name="Frame">Populated FrameData structure</param>
            <returns>Offset of the VBRData structure</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.GetCoefficient(IdSharp.AudioInfo.Inspection.FrameData)">
            <summary>
            Returns frame size coefficient (used in calculating frame size)
            </summary>
            <param name="Frame">Populated FrameData structure</param>
            <returns>Frame size coefficient</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.GetBitRate(IdSharp.AudioInfo.Inspection.FrameData)">
            <summary>
            Returns the bitrate of a frame
            </summary>
            <param name="Frame">Populated FrameData structure</param>
            <returns>Bitrate of the frame</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.GetSampleRate(IdSharp.AudioInfo.Inspection.FrameData)">
            <summary>
            Returns the sample rate of a frame
            </summary>
            <param name="Frame">Populated FrameData structure</param>
            <returns>Sample rate of the frame</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.GetPadding(IdSharp.AudioInfo.Inspection.FrameData)">
            <summary>
            Returns the padding size of a frame (used in calculating frame size)
            </summary>
            <param name="Frame">Populated FrameData structure</param>
            <returns>Padding size</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.GetXingInfo(System.Int32,System.Byte[])">
            <summary>
            Returns VBRData structure from a Xing info tag
            </summary>
            <param name="index">Index in array</param>
            <param name="data">Data byte array</param>
            <returns>VBRData structure</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.GetFhGInfo(System.Int32,System.Byte[])">
            <summary>
            Returns VBRData structure from an FhG info tag
            </summary>
            <param name="index">Index in array</param>
            <param name="data">Data byte array</param>
            <returns>VBRData structure</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.FindVendorID(System.Byte[])">
            <summary>
            Find a VendorID in a byte array
            </summary>
            <param name="data">Byte array</param>
            <returns>VendorID</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.GetEncoderID">
            <summary>
            Returns encoder
            </summary>
            <returns>Encoder</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.GetVBREncoderID">
            <summary>
            Returns encoder from a VBR info tag
            </summary>
            <returns>Encoder from a VBR info tag</returns>
        </member>
        <member name="M:IdSharp.AudioInfo.Inspection.MpegAudio.GetCBREncoderID">
            <summary>
            Returns encoder from a CBR info tag
            </summary>
            <returns>Encoder from a CBR info tag</returns>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.MpegAudio.Version">
            <summary>
            Returns MPEG version
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.MpegAudio.Layer">
            <summary>
            Returns MPEG layer
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Inspection.MpegAudio.Encoder">
            <summary>
            Returns MPEG encoder and version (if known)
            </summary>
        </member>
        <member name="T:IdSharp.AudioInfo.Mpeg">
            <summary>
            MPEG
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.Mpeg.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.Mpeg"/> class.
            </summary>
            <param name="path">The full path of the file.</param>
            <param name="calculateBitrate">if set to <c>true</c> the bitrate will be calculated before the constructor returns.</param>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg.Frequency">
            <summary>
            Gets the frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg.TotalSeconds">
            <summary>
            Gets the total seconds.
            </summary>
            <value>The total seconds.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg.Bitrate">
            <summary>
            Gets the bitrate.
            </summary>
            <value>The bitrate.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg.IsBitrateDetermined">
            <summary>
            Gets a value indicating whether the bitrate has been determined.
            </summary>
            <value>
            	<c>true</c> if this instance is the bitrate has been determined; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg.Channels">
            <summary>
            Gets the number of channels.
            </summary>
            <value>The number of channels.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg.FileType">
            <summary>
            Gets the type of the audio file.
            </summary>
            <value>The type of the audio file.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg.IsVBR">
            <summary>
            Gets a value indicating whether the audio is encoded with a variable bitrate.
            </summary>
            <value><c>true</c> if the audio is encoded with a variable bitrate; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg.IsPrivate">
            <summary>
            Gets a value indicating whether the 'private' bit is set in the frame header.
            </summary>
            <value>
            	<c>true</c> if the 'private' bit is set in the frame header; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg.IsCopyright">
            <summary>
            Gets a value indicating whether the 'copyright' bit is set in the frame header.
            </summary>
            <value>
            	<c>true</c> if the 'copyright' bit is set in the frame header; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IdSharp.AudioInfo.Mpeg.IsOriginal">
            <summary>
            Gets a value indicating whether the 'original' bit is set in the frame header.
            </summary>
            <value>
            	<c>true</c> if the 'original' bit is set in the frame header; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:IdSharp.AudioInfo.MpegLayer">
            <summary>
            MPEG Layer
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.MpegLayer.Layer1">
            <summary>
            Layer I
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.MpegLayer.Layer2">
            <summary>
            Layer II
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.MpegLayer.Layer3">
            <summary>
            Layer III
            </summary>
        </member>
        <member name="T:IdSharp.AudioInfo.MpegVersion">
            <summary>
            MPEG Version
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.MpegVersion.Mpeg1">
            <summary>
            MPEG-1
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.MpegVersion.Mpeg2">
            <summary>
            MPEG-2
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.MpegVersion.Mpeg25">
            <summary>
            MPEG-2.5
            </summary>
        </member>
        <member name="T:IdSharp.AudioInfo.Musepack">
            <summary>
            Musepack
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.Musepack.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.Musepack"/> class.
            </summary>
            <param name="path">The path of the file.</param>
        </member>
        <member name="P:IdSharp.AudioInfo.Musepack.Frequency">
            <summary>
            Gets the frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Musepack.Frames">
            <summary>
            Gets the frame count.
            </summary>
            <value>The frame count.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Musepack.StreamVersion">
            <summary>
            Gets the stream version.
            </summary>
            <value>The stream version.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Musepack.TotalSeconds">
            <summary>
            Gets the total seconds.
            </summary>
            <value>The total seconds.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Musepack.Bitrate">
            <summary>
            Gets the bitrate.
            </summary>
            <value>The bitrate.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Musepack.Mode">
            <summary>
            Gets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Musepack.Channels">
            <summary>
            Gets the number of channels.
            </summary>
            <value>The number of channels.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Musepack.FileType">
            <summary>
            Gets the type of the audio file.
            </summary>
            <value>The type of the audio file.</value>
        </member>
        <member name="T:IdSharp.AudioInfo.OggVorbis">
            <summary>
            Ogg-Vorbis
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.OggVorbis.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.OggVorbis"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="P:IdSharp.AudioInfo.OggVorbis.Frequency">
            <summary>
            Gets the frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.OggVorbis.TotalSeconds">
            <summary>
            Gets the total seconds.
            </summary>
            <value>The total seconds.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.OggVorbis.Bitrate">
            <summary>
            Gets the bitrate.
            </summary>
            <value>The bitrate.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.OggVorbis.Channels">
            <summary>
            Gets the number of channels.
            </summary>
            <value>The number of channels.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.OggVorbis.FileType">
            <summary>
            Gets the type of the audio file.
            </summary>
            <value>The type of the audio file.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.OggVorbis.Samples">
            <summary>
            Gets the number of samples.
            </summary>
            <value>The number of samples.</value>
        </member>
        <member name="T:IdSharp.AudioInfo.OptimFrog">
            <summary>
            OptimFROG
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.OptimFrog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.OptimFrog"/> class.
            </summary>
            <param name="path">The full path of the file.</param>
        </member>
        <member name="P:IdSharp.AudioInfo.OptimFrog.Bitrate">
            <summary>
            Gets the bitrate.
            </summary>
            <value>The bitrate.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.OptimFrog.TotalSeconds">
            <summary>
            Gets the total seconds.
            </summary>
            <value>The total seconds.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.OptimFrog.Channels">
            <summary>
            Gets the number of channels.
            </summary>
            <value>The number of channels.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.OptimFrog.Frequency">
            <summary>
            Gets the frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.OptimFrog.FileType">
            <summary>
            Gets the type of the audio file.
            </summary>
            <value>The type of the audio file.</value>
        </member>
        <member name="T:IdSharp.AudioInfo.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:IdSharp.AudioInfo.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:IdSharp.AudioInfo.RiffWave">
            <summary>
            RIFF WAVE
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.RiffWave.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.RiffWave"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.AudioInfo.RiffWave.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.RiffWave"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="P:IdSharp.AudioInfo.RiffWave.Frequency">
            <summary>
            Gets the frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.RiffWave.TotalSeconds">
            <summary>
            Gets the total seconds.
            </summary>
            <value>The total seconds.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.RiffWave.Bitrate">
            <summary>
            Gets the bitrate.
            </summary>
            <value>The bitrate.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.RiffWave.Channels">
            <summary>
            Gets the number of channels.
            </summary>
            <value>The number of channels.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.RiffWave.FileType">
            <summary>
            Gets the type of the audio file.
            </summary>
            <value>The type of the audio file.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.RiffWave.AudioDataOffset">
            <summary>
            Gets the audio data offset.
            </summary>
            <value>The audio data offset.</value>
        </member>
        <member name="T:IdSharp.AudioInfo.Shorten">
            <summary>
            Shorten
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.Shorten.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdSharp.AudioInfo.Shorten"/> class.
            </summary>
            <param name="path">The path of the file.</param>
        </member>
        <member name="P:IdSharp.AudioInfo.Shorten.Frequency">
            <summary>
            Gets the frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Shorten.Samples">
            <summary>
            Gets the sample count.
            </summary>
            <value>The sample count.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Shorten.TotalSeconds">
            <summary>
            Gets the total seconds.
            </summary>
            <value>The total seconds.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Shorten.Bitrate">
            <summary>
            Gets the bitrate.
            </summary>
            <value>The bitrate.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Shorten.Channels">
            <summary>
            Gets the number of channels.
            </summary>
            <value>The number of channels.</value>
        </member>
        <member name="P:IdSharp.AudioInfo.Shorten.FileType">
            <summary>
            Gets the type of the audio file.
            </summary>
            <value>The type of the audio file.</value>
        </member>
        <member name="M:IdSharp.AudioInfo.APEv2.GetTagSize(System.IO.Stream)">
            <summary>
            Gets the APEv2 tag size from a specified stream.  Returns 0 if no tag exists.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.AudioInfo.ID3v1.GetTagSize(System.IO.Stream)">
            <summary>
            Gets the ID3v1 tag size from a specified stream.  Returns 128 if an ID3v1 tag exists; otherwise, 0.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:IdSharp.AudioInfo.ID3v2.GetTagSize(System.IO.Stream)">
            <summary>
            Gets the ID3v2 tag size from a specified stream.  Returns 0 if no tag exists.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="T:IdSharp.AudioInfo.ID3v2.ID3v2Header.ID3v2TagVersion">
            <summary>
            ID3v2 tag version.
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.ID3v2.ID3v2Header.ID3v2TagVersion.ID3v22">
            <summary>
            ID3v2.2.
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.ID3v2.ID3v2Header.ID3v2TagVersion.ID3v23">
            <summary>
            ID3v2.3.
            </summary>
        </member>
        <member name="F:IdSharp.AudioInfo.ID3v2.ID3v2Header.ID3v2TagVersion.ID3v24">
            <summary>
            ID3v2.4.
            </summary>
        </member>
        <member name="T:IdSharp.AudioInfo.Mpeg4Tag">
            <summary>
            MPEG-4
            </summary>
        </member>
        <member name="M:IdSharp.AudioInfo.Mpeg4Tag.Read(System.String)">
            <summary>
            Reads the tag from the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:IdSharp.AudioInfo.Mpeg4Tag.ReadStream(System.IO.Stream)">
            <summary>
            Reads the tag from the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
    </members>
</doc>
